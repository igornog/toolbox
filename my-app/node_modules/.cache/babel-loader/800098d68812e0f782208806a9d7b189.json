{"ast":null,"code":"var _jsxFileName = \"/Users/nmath3u5/Documents/b2b/sami/hiring-toolbox-web/my-app/src/components/UploadModal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport BeneficiaryService from '../services/beneficiary.service';\nimport useState from '../hooks/useState';\nimport Button from \"../atoms/button\";\nimport \"./uploadModal.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UploadModal = props => {\n  _s();\n\n  const [state, setState] = useState({});\n\n  const closeUploadModal = () => {\n    props.setUploadModalOn(false);\n  };\n\n  const fileData = () => {\n    if (state.doc) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-details\",\n        children: [\"Arquivo adicionado: \", state.doc.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-details no-file\",\n        children: \"Nenhum arquivo adicionado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const onFileChange = event => {\n    setState({\n      doc: event.target.files[0]\n    });\n    const data = new FormData();\n    data.append(\"spreadsheet\", event.target.files[0]);\n    const options = {\n      onUploadProgress: progressEvent => {\n        const {\n          loaded,\n          total\n        } = progressEvent;\n        let percent = Math.floor(loaded * 100 / total);\n\n        if (percent < 100) {\n          setState({ ...state,\n            uploadPercentage: percent\n          });\n        }\n      }\n    };\n    BeneficiaryService.uploadSpreadsheet(data, props.hirerData.company._id, options).then(_ => {\n      setState({ ...state,\n        uploadPercentage: 100\n      }, () => {\n        setTimeout(() => {\n          setState({ ...state,\n            uploadPercentage: 0\n          });\n        }, 1000);\n      });\n    }).catch(error => {\n      console.log(\"error\");\n    }).finally(() => {\n      let companyId = props.hirerData.company._id;\n\n      if (companyId) {\n        props.fetchBeneficiaries(companyId);\n      }\n\n      ;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: closeUploadModal,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            children: \"Baixar planilha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"docUpload\",\n              name: \"docUpload\",\n              onChange: onFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"docUpload\",\n              children: \"Subir planilha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), fileData()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UploadModal, \"yHyJlMXyoSJUgu+m6AqLt0wHf/0=\");\n\n_c = UploadModal;\nexport default UploadModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadModal\");","map":{"version":3,"sources":["/Users/nmath3u5/Documents/b2b/sami/hiring-toolbox-web/my-app/src/components/UploadModal.js"],"names":["React","BeneficiaryService","useState","Button","UploadModal","props","state","setState","closeUploadModal","setUploadModalOn","fileData","doc","name","onFileChange","event","target","files","data","FormData","append","options","onUploadProgress","progressEvent","loaded","total","percent","Math","floor","uploadPercentage","uploadSpreadsheet","hirerData","company","_id","then","_","setTimeout","catch","error","console","log","finally","companyId","fetchBeneficiaries"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport BeneficiaryService from '../services/beneficiary.service'\nimport useState from '../hooks/useState'\n\nimport Button from \"../atoms/button\";\nimport \"./uploadModal.scss\";\n\nconst  UploadModal = (props) => {\n  const [ state, setState ] = useState({})\n\n  const closeUploadModal = () => {\n    props.setUploadModalOn(false);\n  };\n\n  const fileData = () => {\n    if (state.doc) {\n      return (\n        <p className=\"upload-details\">\n          Arquivo adicionado: {state.doc.name}\n        </p>\n      );\n    } else {\n      return (\n        <p className=\"upload-details no-file\">\n          Nenhum arquivo adicionado\n        </p>\n      );\n    }\n  };\n\n  const onFileChange = (event) => {\n    setState({ doc: event.target.files[0] });\n    const data = new FormData();\n    data.append(\"spreadsheet\", event.target.files[0]);\n    const options = {\n      onUploadProgress: (progressEvent) => {\n        const { loaded, total } = progressEvent;\n        let percent = Math.floor((loaded * 100) / total);\n        \n\n        if (percent < 100) {\n          setState({ ...state, uploadPercentage: percent });\n        }\n      },\n    };\n    \n    BeneficiaryService.uploadSpreadsheet(\n      data,\n      props.hirerData.company._id,\n      options\n    )\n      .then((_) => {\n        setState({ ...state, uploadPercentage: 100 }, () => {\n          setTimeout(() => {\n            setState({\n              ...state,\n              uploadPercentage: 0,\n            });\n          }, 1000);\n        });\n      })\n      .catch((error) => {\n        console.log(\"error\")\n      })\n      .finally(() => {\n        let companyId = props.hirerData.company._id;\n        if (companyId) {\n          props.fetchBeneficiaries(companyId)\n        };\n      })\n  };\n\n  return (\n    <>\n      <div className=\"modal-background\"></div>\n      <section>\n        <div>\n          <span onClick={closeUploadModal}><p>X</p></span>\n          <div className=\"content\">\n            <Button>Baixar planilha</Button>\n            <Button onClick></Button>\n            <div className=\"input-wrap\">\n              <input\n                type=\"file\"\n                id=\"docUpload\"\n                name=\"docUpload\"\n                onChange={onFileChange}\n              />\n              <label for=\"docUpload\">Subir planilha</label>\n              {fileData()}\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default UploadModal;\n"]},"metadata":{},"sourceType":"module"}